set bail on;

-- Created 28.09.2025. Checked on 6.0.0.1282; 5.0.4.1715; 4.0.7.3235; 3.0.14.33826.
-- DDL and data that were defined in backups/gtcs_sh_test.gbk which was made for
-- tests related to Interbase v4 (approx. in 1993).
-- For QA tests, backup that is based on DDL + data from *this* script must be used
-- instead of old gtcs_sh_test.gbk
-- Also, this script can be used directly.

CREATE GENERATOR CUSTOMERS;
CREATE GENERATOR DEPARTMENTS;
CREATE GENERATOR EMPLOYEES;
CREATE GENERATOR EMPLOYEES_PROJECTS;
CREATE GENERATOR JOBS;
CREATE GENERATOR MAX_EMP;
CREATE GENERATOR POSTAL_STATES;
CREATE GENERATOR PROJECTS;
CREATE GENERATOR PYXIS$FORMS;
CREATE GENERATOR QLI$PROCEDURES;
CREATE GENERATOR RATING;
CREATE GENERATOR REVIEW;
CREATE GENERATOR SALARY_HISTORY;
CREATE GENERATOR SALES;
CREATE GENERATOR SALES_PEOPLE;
CREATE GENERATOR SALES_PERF;


CREATE DOMAIN ADDRESS AS VARCHAR(30);
CREATE DOMAIN AMOUNT AS NUMERIC(9, 2);
CREATE DOMAIN BADGE AS SMALLINT;
CREATE DOMAIN BUDGET_SUBS AS NUMERIC(9, 2);
CREATE DOMAIN CHANGE_DATE AS DATE;
CREATE DOMAIN CITY AS VARCHAR(25);
CREATE DOMAIN COMMENTS AS BLOB SUB_TYPE TEXT SEGMENT SIZE 40;
CREATE DOMAIN CONTACT AS VARCHAR(25);
CREATE DOMAIN CUSTNO AS SMALLINT;
CREATE DOMAIN CUSTOMER AS VARCHAR(25);
CREATE DOMAIN DATE_NEEDED AS DATE;
CREATE DOMAIN DATE_REVIEWED AS DATE;
CREATE DOMAIN DEPARTMENT AS VARCHAR(25);
CREATE DOMAIN DEPTNO AS CHAR(3);
CREATE DOMAIN DEPT_LEVEL AS CHAR(1);
CREATE DOMAIN DUTIES AS BLOB SUB_TYPE 0 SEGMENT SIZE 80;
CREATE DOMAIN EMPNO AS SMALLINT;
CREATE DOMAIN EMP_COMMENTS AS BLOB SUB_TYPE TEXT SEGMENT SIZE 40;
CREATE DOMAIN EXPLANATION AS BLOB SUB_TYPE TEXT SEGMENT SIZE 30;
CREATE DOMAIN FIELD_OFFICE AS VARCHAR(15);
CREATE DOMAIN FIRST_NAME AS VARCHAR(10);
CREATE DOMAIN HEAD_DEPT AS CHAR(3);
CREATE DOMAIN HIGH_SALARY_RANGE AS NUMERIC(9, 2);
CREATE DOMAIN HIRE_DATE AS DATE;
CREATE DOMAIN JOB AS VARCHAR(5);
CREATE DOMAIN JOB_TITLE AS VARCHAR(25);
CREATE DOMAIN LAST_NAME AS VARCHAR(15);
CREATE DOMAIN LEVEL AS CHAR(1);
CREATE DOMAIN LOW_SALARY_RANGE AS NUMERIC(9, 2);
CREATE DOMAIN MGRNO AS SMALLINT;
CREATE DOMAIN NAME AS VARCHAR(26);
CREATE DOMAIN NEW_SALARY AS NUMERIC(9, 2);
CREATE DOMAIN OFFICE AS VARCHAR(15);
CREATE DOMAIN OLD_SALARY AS NUMERIC(9, 2);
CREATE DOMAIN ON_HOLD AS CHAR(1);
CREATE DOMAIN ORDER_DATE AS DATE;
CREATE DOMAIN ORDER_STATUS AS VARCHAR(7);
CREATE DOMAIN PAID AS CHAR(1);
CREATE DOMAIN PHONE_EXT AS CHAR(3);
CREATE DOMAIN PHONE_NO AS CHAR(10);
CREATE DOMAIN "PO#" AS CHAR(8);
CREATE DOMAIN PONUMB AS CHAR(8);
CREATE DOMAIN "POSITION" AS CHAR(2);
CREATE DOMAIN PO_DATE AS DATE;
CREATE DOMAIN PRICE AS NUMERIC(9, 2);
CREATE DOMAIN PRODUCT AS VARCHAR(12);
CREATE DOMAIN PROJ_DESC AS BLOB SUB_TYPE 0 SEGMENT SIZE 80;
CREATE DOMAIN PROJ_NAME AS VARCHAR(15);
CREATE DOMAIN PROJ_NO AS CHAR(5);
CREATE DOMAIN PYXIS$FORM AS BLOB SUB_TYPE 0 SEGMENT SIZE 80;
CREATE DOMAIN PYXIS$FORM_NAME AS CHAR(31);
CREATE DOMAIN PYXIS$FORM_TYPE AS CHAR(16);
CREATE DOMAIN QLI$PROCEDURE AS BLOB SUB_TYPE TEXT SEGMENT SIZE 80;
CREATE DOMAIN QLI$PROCEDURE_NAME AS CHAR(31);
CREATE DOMAIN RATING AS CHAR(1);
CREATE DOMAIN RATING_DESCRIPTION AS VARCHAR(15);
CREATE DOMAIN REBATE AS CHAR(1);
CREATE DOMAIN REPORTS AS SMALLINT;
CREATE DOMAIN REQUIREMENTS AS BLOB SUB_TYPE TEXT SEGMENT SIZE 30;
CREATE DOMAIN REVIEWER AS SMALLINT;
CREATE DOMAIN SALARY AS NUMERIC(9, 2);
CREATE DOMAIN SALES_REP AS SMALLINT;
CREATE DOMAIN SEX AS CHAR(1);
CREATE DOMAIN SHIPPED AS DATE;
CREATE DOMAIN SSN AS CHAR(9);
CREATE DOMAIN STATE AS VARCHAR(4);
CREATE DOMAIN SUPER AS SMALLINT;
CREATE DOMAIN TEAM_LEADER AS SMALLINT;
CREATE DOMAIN TOTAL_BUDGET AS NUMERIC(9, 2);
CREATE DOMAIN TOTAL_SALES AS INTEGER;
CREATE DOMAIN TOTAL_VALUE AS INTEGER;
CREATE DOMAIN UPDATER_ID AS VARCHAR(20);
CREATE DOMAIN VENDOR AS VARCHAR(25);
CREATE DOMAIN VERSION AS CHAR(6);
CREATE DOMAIN ZIP_CODE AS CHAR(5);
COMMIT WORK;

CREATE TABLE BIG (
    ROWID        SMALLINT,
    SOURCE       CHAR(30),
    NSMALLINT01  SMALLINT,
    NSMALLINT02  SMALLINT,
    NSMALLINT03  SMALLINT,
    NSMALLINT04  SMALLINT,
    NSMALLINT05  SMALLINT,
    NFLOAT01     FLOAT,
    NFLOAT02     FLOAT,
    NFLOAT03     FLOAT,
    NFLOAT04     FLOAT,
    NFLOAT05     FLOAT,
    NFLOAT06     FLOAT,
    NLFLOAT01    DOUBLE PRECISION,
    NLFLOAT02    DOUBLE PRECISION,
    NLFLOAT03    DOUBLE PRECISION,
    NLFLOAT04    DOUBLE PRECISION,
    NLFLOAT05    DOUBLE PRECISION,
    NINTEGER01   INTEGER,
    NINTEGER02   INTEGER,
    NINTEGER03   INTEGER,
    NINTEGER04   INTEGER,
    NINTEGER05   INTEGER,
    NDECIMAL01   INTEGER,
    NDECIMAL02   INTEGER,
    NDECIMAL03   INTEGER,
    NDECIMAL04   INTEGER,
    NDECIMAL05   INTEGER,
    CCHAR01      CHAR(1),
    CCHAR02      CHAR(128),
    CCHAR03      CHAR(256),
    CCHAR04      CHAR(2048),
    CCHAR05      CHAR(8193),
    VCHAR01      VARCHAR(5),
    VCHAR02      VARCHAR(50),
    VCHAR03      VARCHAR(256),
    VCHAR04      VARCHAR(4096),
    VCHAR05      VARCHAR(24576),
    DDATE01      DATE,
    DDATE02      DATE,
    DDATE03      DATE,
    DDATE04      DATE,
    DDATE05      DATE
);

CREATE TABLE CUSTOMERS (
    CUSTNO    CUSTNO /* CUSTNO = SMALLINT */,
    CUSTOMER  CUSTOMER /* CUSTOMER = VARCHAR(25) customer not missing */,
    CONTACT   CONTACT /* CONTACT = VARCHAR(25) */,
    ADDRESS   ADDRESS /* ADDRESS = VARCHAR(30) */,
    CITY      CITY /* CITY = VARCHAR(25) */,
    STATE     STATE /* STATE = VARCHAR(4) */,
    ZIP_CODE  ZIP_CODE /* ZIP_CODE = CHAR(5) */,
    PHONE_NO  PHONE_NO /* PHONE_NO = CHAR(10) */,
    ON_HOLD   ON_HOLD /* ON_HOLD = CHAR(1) on_hold = '*' or on_hold missing */
);


CREATE TABLE DEPARTMENTS (
    DEPTNO      DEPTNO /* DEPTNO = CHAR(3) */,
    DEPARTMENT  DEPARTMENT /* DEPARTMENT = VARCHAR(25) */,
    MGRNO       MGRNO /* MGRNO = SMALLINT */,
    REPORTS     REPORTS /* REPORTS = SMALLINT */,
    HEAD_DEPT   HEAD_DEPT /* HEAD_DEPT = CHAR(3) */,
    OFFICE      OFFICE /* OFFICE = VARCHAR(15) */,
    PHONE_NO    PHONE_NO /* PHONE_NO = CHAR(10) */,
    DEPT_LEVEL  LEVEL /* LEVEL = CHAR(1) level = '1','2','3','4','5','6' */
);

CREATE TABLE EMPLOYEES (
    EMPNO       EMPNO /* EMPNO = SMALLINT */,
    NAME        NAME /* NAME = VARCHAR(26) */,
    LAST_NAME   LAST_NAME /* LAST_NAME = VARCHAR(15) last_name not missing */,
    FIRST_NAME  FIRST_NAME /* FIRST_NAME = VARCHAR(10) first_name not missing */,
    LEVEL       LEVEL /* LEVEL = CHAR(1) level = '1','2','3','4','5','6' */,
    JOB         JOB /* JOB = VARCHAR(5) */,
    SALARY      SALARY /* SALARY = NUMERIC(9,2) */,
    DEPTNO      DEPTNO /* DEPTNO = CHAR(3) */,
    SUPER       SUPER /* SUPER = SMALLINT */,
    SEX         SEX /* SEX = CHAR(1) sex = 'F' or sex = 'M' or sex missing */,
    HIRE_DATE   HIRE_DATE /* HIRE_DATE = DATE */,
    SSN         SSN /* SSN = CHAR(9) */,
    PHONE_EXT   PHONE_EXT /* PHONE_EXT = CHAR(3) */
);

CREATE TABLE EMPLOYEES_PROJECTS (
    EMPNO     EMPNO /* EMPNO = SMALLINT */,
    PROJ_NO   PROJ_NO /* PROJ_NO = CHAR(5) */,
    DUTIES    DUTIES /* DUTIES = BLOB SUB_TYPE 0 SEGMENT SIZE 80 */,
    "POSITION"  "POSITION" /* "POSITION" = CHAR(2) */
);

CREATE TABLE JOBS (
    JOB                JOB /* JOB = VARCHAR(5) */,
    JOB_TITLE          JOB_TITLE /* JOB_TITLE = VARCHAR(25) */,
    LEVEL              LEVEL /* LEVEL = CHAR(1) level = '1','2','3','4','5','6' */,
    LOW_SALARY_RANGE   LOW_SALARY_RANGE /* LOW_SALARY_RANGE = NUMERIC(9,2) */,
    HIGH_SALARY_RANGE  HIGH_SALARY_RANGE /* HIGH_SALARY_RANGE = NUMERIC(9,2) */,
    REQUIREMENTS       REQUIREMENTS /* REQUIREMENTS = BLOB SUB_TYPE 1 SEGMENT SIZE 30 */
);

CREATE TABLE MAX_EMP (
    EMPNO  EMPNO /* EMPNO = SMALLINT */
);

CREATE TABLE POSTAL_STATES (
    STATE  STATE /* STATE = VARCHAR(4) */
);

CREATE TABLE PROJECTS (
    PROJ_NO      PROJ_NO /* PROJ_NO = CHAR(5) */,
    PROJ_NAME    PROJ_NAME /* PROJ_NAME = VARCHAR(15) */,
    PROJ_DESC    PROJ_DESC /* PROJ_DESC = BLOB SUB_TYPE 0 SEGMENT SIZE 80 */,
    TEAM_LEADER  TEAM_LEADER /* TEAM_LEADER = SMALLINT */,
    PRODUCT      PRODUCT /* PRODUCT = VARCHAR(12) */,
    VERSION      VERSION /* VERSION = CHAR(6) */
);

CREATE TABLE PYXIS$FORMS (
    PYXIS$FORM_NAME  PYXIS$FORM_NAME /* PYXIS$FORM_NAME = CHAR(31) */,
    PYXIS$FORM_TYPE  PYXIS$FORM_TYPE /* PYXIS$FORM_TYPE = CHAR(16) */,
    PYXIS$FORM       PYXIS$FORM /* PYXIS$FORM = BLOB SUB_TYPE 0 SEGMENT SIZE 80 */
);


CREATE TABLE QLI$PROCEDURES (
    QLI$PROCEDURE_NAME  QLI$PROCEDURE_NAME /* QLI$PROCEDURE_NAME = CHAR(31) */,
    QLI$PROCEDURE       QLI$PROCEDURE /* QLI$PROCEDURE = BLOB SUB_TYPE 1 SEGMENT SIZE 80 */
);


CREATE TABLE RATING (
    RATING              RATING /* RATING = CHAR(1) */,
    RATING_DESCRIPTION  RATING_DESCRIPTION /* RATING_DESCRIPTION = VARCHAR(15) */,
    EXPLANATION         EXPLANATION /* EXPLANATION = BLOB SUB_TYPE 1 SEGMENT SIZE 30 */
);


CREATE TABLE REVIEW (
    REVIEWER       REVIEWER /* REVIEWER = SMALLINT */,
    EMPNO          EMPNO /* EMPNO = SMALLINT */,
    RATING         RATING /* RATING = CHAR(1) */,
    COMMENTS       COMMENTS /* COMMENTS = BLOB SUB_TYPE 1 SEGMENT SIZE 40 */,
    DATE_REVIEWED  DATE_REVIEWED /* DATE_REVIEWED = DATE */,
    EMP_COMMENTS   EMP_COMMENTS /* EMP_COMMENTS = BLOB SUB_TYPE 1 SEGMENT SIZE 40 */
);

CREATE TABLE SALARY_HISTORY (
    EMPNO           EMPNO /* EMPNO = SMALLINT */,
    CHANGE_DATE     CHANGE_DATE /* CHANGE_DATE = DATE */,
    OLD_SALARY      OLD_SALARY /* OLD_SALARY = NUMERIC(9,2) */,
    NEW_SALARY      NEW_SALARY /* NEW_SALARY = NUMERIC(9,2) */,
    PERCENT_CHANGE  COMPUTED BY ((new_salary/old_salary) * 100),
    UPDATER_ID      UPDATER_ID /* UPDATER_ID = VARCHAR(20) */
);

CREATE TABLE SALES (
    CUSTNO        CUSTNO /* CUSTNO = SMALLINT */,
    PONUMB        PONUMB /* PONUMB = CHAR(8) */,
    SALES_REP     SALES_REP /* SALES_REP = SMALLINT */,
    ORDER_DATE    ORDER_DATE /* ORDER_DATE = DATE */,
    TOTAL_VALUE   TOTAL_VALUE /* TOTAL_VALUE = INTEGER */,
    DATE_NEEDED   DATE_NEEDED /* DATE_NEEDED = DATE */,
    ORDER_STATUS  ORDER_STATUS /* ORDER_STATUS = VARCHAR(7) order_status = 'shipped','booked','waiting','holding' */,
    PAID          PAID /* PAID = CHAR(1) paid = '*' or paid missing */,
    SHIPPED       SHIPPED /* SHIPPED = DATE */,
    WARRANTY      COMPUTED BY ( dateadd(45 day to shipped) ),
    AGED          COMPUTED BY ( datediff(day from shipped to current_date) )
);


CREATE TABLE SALES_PEOPLE (
    EMPNO       EMPNO /* EMPNO = SMALLINT */,
    LAST_NAME   LAST_NAME /* LAST_NAME = VARCHAR(15) last_name not missing */,
    FIRST_NAME  FIRST_NAME /* FIRST_NAME = VARCHAR(10) first_name not missing */,
    MGR         SUPER /* SUPER = SMALLINT */
);

CREATE TABLE SALES_PERF (
    EMPNO        EMPNO /* EMPNO = SMALLINT */,
    FIRST_NAME   FIRST_NAME /* FIRST_NAME = VARCHAR(10) first_name not missing */,
    LAST_NAME    LAST_NAME /* LAST_NAME = VARCHAR(15) last_name not missing */,
    SALARY       SALARY /* SALARY = NUMERIC(9,2) */,
    TOTAL_SALES  TOTAL_SALES /* TOTAL_SALES = INTEGER */,
    QUOTA        COMPUTED BY (salary * 4.5),
    TO_DATE      COMPUTED BY (total_sales / quota)
);



INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (114, '1st Canine Bank', 'George McClellan', '1342 Massachusetts Avenue', 'Boston', 'MA', '02113', '6179291622', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (100, 'Thomas Novelty Co.', 'George Thomas', '101 Tremont St', 'Boston', 'MA', '02108', '6179291181', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (101, 'Scott Bros Auto Care', 'Winfield Scott', '109 Bittersweet Lane', 'Randolph', 'MA', '02368', '6179632219', '*');
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (102, 'JL Music Corp', 'Ambrose Burnside', '7801 Escanaba Ave S', 'Chicago', 'IL', '60649', '3123429982', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (103, 'The Groton Company', 'Phil Sheridan', 'Great Road', 'Groton', 'MA', '01450', '5086436627', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (104, 'Pope & Saunders Ltd', 'John Pope', '1172 Seminole Drive', 'Apalachiola', 'FL', '32320', '3052983744', '*');
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (105, '1st Litonian Bank', 'Joe Hooker', 'PO Box 6000, Teutonia Sta', 'Milwaukee', 'WI', '53206', '4142320000', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (106, 'The Bike Mart', 'Sam Grant', '499 Hamlin Avenue', 'Chicago', 'IL', '60624', '3123828888', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (107, 'Haus auf Pizza', 'Bill Sherman', '1234 Main Street', 'New Haven', 'CT', '06508', '2039187728', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (108, 'Carbone Machine Tools', 'Fritz Siegal', '902 Bedford Street', 'Burlington', 'MA', '01803', '6177271181', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (109, 'Czbrynik Meat Packer', 'George Meade', '3 Meat Market', 'Green Bay', 'WI', '54305', '4142983288', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (110, 'Sporting Life Health Bars', 'George Custer', '1302 Wawona Street', 'San Francisco', 'CA', '94116', '4152092283', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (111, 'Highway Patrol Uniform Co', 'John Sedgewick', 'PO Box 1968, El Viejo Station', 'Modesto', 'CA', '95353', NULL, NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (112, 'LOM Incorporated', 'Don Carlos Buell', '1812 Dearborn Street', 'Detroit', 'MI', '48209', '3132320900', NULL);
INSERT INTO CUSTOMERS (CUSTNO, CUSTOMER, CONTACT, ADDRESS, CITY, STATE, ZIP_CODE, PHONE_NO, ON_HOLD) VALUES (113, 'Nature''s Food Co-op', 'John Logan', 'Harvard Square', 'Cambridge', 'MA', '02139', '6172839229', NULL);



INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('100', 'Sales and Marketing', 143, 2, '000', 'Boston', '179197100', '2');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('200', 'Engineering', 133, 2, '000', 'Boston', '6179197200', '2');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('300', 'Administration & Finance', 136, 2, '000', 'Boston', '6179197300', '2');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('400', 'Customer Services', 132, 2, '000', 'Boston', '6179197400', '2');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('310', 'Purchasing', NULL, 0, '400', 'Boston', '6179197310', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('110', 'Sales', 150, 2, '100', 'Boston', '6179197110', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('111', 'Eastern Sales Region', 142, 5, '110', 'Boston', '6179197111', '4');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('112', 'Western Sales Region', 118, 4, '110', 'Denver', NULL, '4');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('113', 'Southern Sales Region', NULL, 0, '110', 'Atlanta', NULL, '4');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('000', 'Corporate Headquarters', 120, 1, '000', 'Boston', '6179197000', '1');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('114', 'Midwest Sales Region', 158, 3, '110', 'St Louis', NULL, '4');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('120', 'Marketing', 149, 2, '100', 'Boston', '6179197120', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('121', 'Public Relations', NULL, 0, '120', 'Boston', NULL, '4');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('122', 'Market Analysis', NULL, 0, '120', 'Boston', NULL, '4');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('410', 'Customer Communications', 134, 2, '400', 'Boston', '6179197410', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('420', 'Customer Education', 130, 3, '400', 'Boston', '6179197420', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('430', 'Customer Support', 154, 8, '400', 'Boston', '6179197430', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('210', 'Development', 146, 9, '200', 'Boston', '6179197210', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('220', 'Maintenance', 123, 3, '200', 'Boston', '6179197220', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('230', 'Quality Assurance', 116, 3, '200', 'Boston', '6179197230', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('320', 'Shipping and Receiving', 155, 2, '300', 'Boston', '6179197320', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('330', 'Accounting', 112, 1, '300', 'Boston', '6179197330', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('340', 'Administration', NULL, 0, '300', 'Boston', '6179197340', '3');
INSERT INTO DEPARTMENTS (DEPTNO, DEPARTMENT, MGRNO, REPORTS, HEAD_DEPT, OFFICE, PHONE_NO, DEPT_LEVEL) VALUES ('115', 'Federal Sales Region', 138, 3, '110', 'Washington', NULL, '4');




INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (100, 'Basset', 'Hermione', '5', 'Sales', 49000, '112', 105, 'F', '9-JUN-1986', '233488301', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (101, 'Beagle', 'George', '4', 'Mgr', 66000, '430', 139, 'M', '9-JUN-1986', '209938871', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (102, 'Borzoi', 'Jessie', '5', 'SSE', 72000, '210', 111, 'F', '9-JUN-1986', '020003984', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (103, 'Spaniel', 'Alice', '5', 'SSE', 68000, '230', 114, 'F', '9-JUN-1986', '987298839', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (104, 'Chow', 'Maud', '2', 'VP', 92000, '100', 120, 'F', '9-JUN-1986', '098801233', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (105, 'Shepherd', 'Harold', '4', 'Mgr', 66000, '112', 104, 'M', '9-JUN-1986', '298293300', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (106, 'Collie', 'Alan', '5', 'SSupt', 48000, '112', 105, 'M', '9-JUN-1986', '298787388', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (107, 'Poodle', 'Thomas', '4', 'Mgr', 62000, '420', 139, 'M', '1-DEC-1986', '598399299', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (108, 'Cocker', 'Harvey', '5', 'Educ', 43000, '420', 107, 'M', '1-DEC-1986', '000910180', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (109, 'Bluetick', 'Walter', '2', 'VP', 91000, '200', 120, 'M', '1-DEC-1986', '280283999', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (110, 'Boxer', 'Virginia', '5', 'SE', 47000, '210', 111, 'F', '16-FEB-1987', '298300901', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (111, 'Dachshund', 'Emily', '4', 'Mgr', 67500, '210', 109, 'F', '16-FEB-1987', '109283888', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (112, 'Terrier', 'Terrel', '6', 'Admin', 15500, '330', 117, 'M', '16-FEB-1987', '398010928', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (113, 'Dingo', 'David', '4', 'Mgr', 71000, '220', 109, 'M', '16-FEB-1987', '478293302', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (114, 'Retriever', 'Edward', '4', 'Mgr', 67000, '230', 109, 'M', '16-FEB-1987', '482020290', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (115, 'Springer', 'Robert', '5', 'SSE', 60000, '220', 113, 'M', '16-FEB-1987', '329877700', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (116, 'Samoyed', 'Theodore', '5', 'SE', 43000, '230', 114, 'M', '26-JUL-1987', '209283887', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (117, 'Whippet', 'James', '3', 'Dir', 71000, '300', 120, 'M', '26-JUL-1987', '198200983', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (118, 'Griffon', 'Ronald', '5', 'Sales', 45000, '112', 105, 'M', '26-JUL-1987', '209329843', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (119, 'Schnauzer', 'Karl', '5', 'Supt', 47500, '430', 101, 'M', '4-MAR-1987', '298383994', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (120, 'Saluki', 'Dimitri', '1', 'Pres', 112000, '000', NULL, 'M', '4-MAR-1987', '209937783', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (121, 'Pug', 'Jeannette', '5', 'Supt', 49000, '430', 101, 'F', '4-MAR-1987', '110929882', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (122, 'Setter', 'Brenda', '4', 'Mgr', 65500, '111', 104, 'F', '4-MAR-1987', '309990911', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (123, 'Keeshond', 'Lisa', '5', 'SE', 45000, '220', 113, 'F', '4-MAR-1987', '474867239', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (124, 'Spitz', 'Kelly', '5', 'Doc', 32000, '410', 139, 'F', '4-MAR-1987', '823648002', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (125, 'Mastiff', 'Samantha', '5', 'Sales', 70000, '111', 122, 'F', '4-MAR-1987', '100999011', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (126, 'Barbet', 'Donald', '6', 'Admin', 17250, '320', 117, 'M', '4-MAR-1987', '009110019', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (127, 'Dalmation', 'Edwin', '5', 'SSupt', 47000, '111', 122, 'M', '14-NOV-1988', '109910081', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (128, 'Turnspit', 'Richard', '5', 'SSE', 64500, '210', 111, 'M', '14-NOV-1988', '218773782', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (129, 'Weimaraner', 'Ralph', '5', 'Supt', 47500, '430', 101, 'M', '16-NOV-1988', '110922092', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (130, 'Briard', 'Susan', '5', 'Educ', 45000, '420', 107, 'F', '2-JAN-1989', '209203999', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (131, 'Labrador', 'Eric', '5', 'SE', 45000, '210', 111, 'M', '2-JAN-1989', '020293839', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (132, 'Lurcher', 'Howard', '6', 'Admin', 17250, '400', 139, 'M', '2-JAN-1989', '000192828', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (133, 'Otterhound', 'Ann', '6', 'Admin', 17250, '200', 109, 'F', '9-JAN-1989', '209298177', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (134, 'Poochkin', 'Alexandra', '5', 'Doc', 35000, '410', 139, 'F', '27-MAR-1989', '040306959', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (135, 'Pyrenees', 'Greta', '5', 'SE', 44500, '210', 111, 'F', '27-MAR-1989', '060654908', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (136, 'Shepherd', 'Germain', '6', 'Admin', 18000, '300', 117, 'M', '27-MAR-1989', '129839989', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (137, 'Apso', 'Lhasa', '5', 'Sales', 45000, '115', 140, 'M', '30-MAR-1989', '102938448', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (138, 'Pomeranian', 'Felix', '5', 'Sales', 43000, '115', 140, 'M', '30-MAR-1989', '122909384', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (139, 'Pointer', 'Samuel', '2', 'VP', 91000, '400', 120, 'M', '26-JUL-1987', '687656120', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (140, 'Collie', 'Lamont', '4', 'Mgr', 69000, '115', 104, 'M', '1-JUN-1989', '290239847', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (141, 'Shepherd', 'Glen', '5', 'Sales', 46000, '111', 122, 'M', '26-SEP-1989', '109000293', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (142, 'Springer', 'Alex', '5', 'Sales', 48000, '111', 122, 'M', '26-SEP-1989', '109299278', '?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (144, 'Schnauzer', 'Elayne', '5', 'SSE', 60000, '210', 111, 'F', '27-SEP-1989', '109288309', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (145, 'Chow', 'Chau', '5', 'SE', 45000, '210', 111, 'M', '27-SEP-1989', '200930390', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (146, 'Moyed', 'Sam', '5', 'SE', 45500, '210', 111, 'M', '27-SEP-1989', '202990908', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (147, 'Mutt', 'Jeff', '3', 'Dir', 77000, '110', 104, 'M', '27-SEP-1989', '030594069', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (148, 'Bowzer', 'Chantal', '3', 'Dir', 79000, '120', 104, 'F', '27-SEP-1989', '202938802', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (149, 'Afgan', 'Stev', '6', 'Admin', 17250, '120', 148, 'M', '27-SEP-1989', '102992817', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (150, 'Pekinese', 'Diane', '6', 'Admin', 16500, '110', 147, 'F', '27-SEP-1989', '022039388', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (151, 'Affenpinscher', 'Dave', '5', 'Supt', 46000, '430', 101, 'M', '27-SEP-1989', '432200049', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (152, 'Pitt-Bull', 'William', '5', 'Supt', 49000, '430', 101, 'M', '27-SEP-1989', '298197263', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (153, 'Sheltie', 'Lauren', '5', 'Supt', 49000, '430', 101, 'F', '27-SEP-1989', '209384717', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (154, 'Bernard', 'Saynt', '5', 'Supt', 47000, '430', 101, 'M', '27-SEP-1989', '109200390', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (156, 'Terrier', 'Irish', '5', 'Sales', 48000, '114', NULL, 'M', '29-SEP-1989', '209938477', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (155, 'Foundland', 'Newt', '6', 'Admin', 17000, '320', 117, 'M', '27-SEP-1989', '109283022', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (157, 'Terrier', 'Fox', '5', 'Sales', 49000, '114', NULL, 'F', '29-SEP-1989', '092001283', NULL);
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (158, 'Mation', 'Dal', '4', 'Mgr', 62000, '114', 104, 'M', '3-OCT-1989', '109902883', 'x?');
INSERT INTO EMPLOYEES (EMPNO, LAST_NAME, FIRST_NAME, LEVEL, JOB, SALARY, DEPTNO, SUPER, SEX, HIRE_DATE, SSN, PHONE_EXT) VALUES (143, 'Nese', 'Pinky', '6', 'Admin', 18000, '100', 104, 'M', '26-SEP-1989', '102902298', NULL);



INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (102, 'HH300', 'Project leader, schedule projects, 
schedule, co-ordinate release effort
co-ordinate release effort, manage 
employees assigned to project.
', 'TL');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (135, 'HH300', 'Engineer, Assist the Tl in releasing
the software.  Perform tasks as 
assigned by the team leader.
', 'EN');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (110, 'HH300', 'Engineer, Assist the Tl in releasing
the software.  Perform tasks as 
assigned by the team leader.
', 'EN');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (144, 'DE300', 'Engineer, Assist the Tl in releasing
the software.  Perform tasks as 
assigned by the team leader.
', 'EN');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (145, 'DE300', 'Engineer, Assist the Tl in releasing
the software.  Perform tasks as 
assigned by the team leader.
', 'EN');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (131, 'DE300', 'Engineer, Assist the Tl in releasing
the software.  Perform tasks as 
assigned by the team leader.
', 'EN');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (103, 'DE300', 'Project leader, schedule projects, 
schedule, co-ordinate release effort
co-ordinate release effort, manage 
employees assigned to project.
', 'TL');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (128, 'FJ300', 'Project leader, schedule projects, 
schedule, co-ordinate release effort
co-ordinate release effort, manage 
employees assigned to project.
', 'TL');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (146, 'FJ300', 'Engineer, Assist the Tl in releasing
the software.  Perform tasks as 
assigned by the team leader.
', 'EN');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (144, 'FJ300', NULL, 'EN');
INSERT INTO EMPLOYEES_PROJECTS (EMPNO, PROJ_NO, DUTIES, "POSITION") VALUES (102, 'FJ300', 'Engineer, Assist the Tl in releasing
the software.  Perform tasks as 
assigned by the team leader.
', 'EN');



INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('SE', 'Software Engineer', '5', 33000, 65000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('VP', 'Vice President', '2', 80000, 110000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Pres', 'President', '1', 90000, 130000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Mgr', 'Manager', '4', 52000, 80000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Sales', 'Salesman', '5', 35000, 70000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('SSE', 'Senior Software Engineer', '5', 50000, 90000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('SSupt', 'Sales Support', '5', 38000, 86000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Supt', 'Support Engineer', '5', 40000, 88000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Admin', 'Administrative Clerk', '6', 15000, 28000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Doc', 'Technical Writer', '5', 20000, 42000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Educ', 'Educator', '5', 30000, 65000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('Dir', 'Director', '3', 60000, 90000, NULL);
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('PRel', 'Publicist', '5', 20000, 45000, 'BA/BS in a following area:
Communications or Journalism
or English or Public Relations

3-5 years publi relations
experience in a high tech
environment

 
');
INSERT INTO JOBS (JOB, JOB_TITLE, LEVEL, LOW_SALARY_RANGE, HIGH_SALARY_RANGE, REQUIREMENTS) VALUES ('MktAn', 'Market Analyst', '5', 25000, 50000, NULL);


INSERT INTO MAX_EMP (EMPNO) VALUES (158);


INSERT INTO POSTAL_STATES (STATE) VALUES ('AL');
INSERT INTO POSTAL_STATES (STATE) VALUES ('AK');
INSERT INTO POSTAL_STATES (STATE) VALUES ('AZ');
INSERT INTO POSTAL_STATES (STATE) VALUES ('AR');
INSERT INTO POSTAL_STATES (STATE) VALUES ('CA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('CO');
INSERT INTO POSTAL_STATES (STATE) VALUES ('CT');
INSERT INTO POSTAL_STATES (STATE) VALUES ('DE');
INSERT INTO POSTAL_STATES (STATE) VALUES ('DC');
INSERT INTO POSTAL_STATES (STATE) VALUES ('FL');
INSERT INTO POSTAL_STATES (STATE) VALUES ('GA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('HI');
INSERT INTO POSTAL_STATES (STATE) VALUES ('ID');
INSERT INTO POSTAL_STATES (STATE) VALUES ('IL');
INSERT INTO POSTAL_STATES (STATE) VALUES ('IN');
INSERT INTO POSTAL_STATES (STATE) VALUES ('IA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('KS');
INSERT INTO POSTAL_STATES (STATE) VALUES ('KY');
INSERT INTO POSTAL_STATES (STATE) VALUES ('LA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('ME');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MD');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MI');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MN');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MS');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MO');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MT');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NE');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NV');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NH');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NJ');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NM');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NY');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NC');
INSERT INTO POSTAL_STATES (STATE) VALUES ('ND');
INSERT INTO POSTAL_STATES (STATE) VALUES ('OH');
INSERT INTO POSTAL_STATES (STATE) VALUES ('OK');
INSERT INTO POSTAL_STATES (STATE) VALUES ('OR');
INSERT INTO POSTAL_STATES (STATE) VALUES ('PA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('RI');
INSERT INTO POSTAL_STATES (STATE) VALUES ('SC');
INSERT INTO POSTAL_STATES (STATE) VALUES ('SD');
INSERT INTO POSTAL_STATES (STATE) VALUES ('TN');
INSERT INTO POSTAL_STATES (STATE) VALUES ('TX');
INSERT INTO POSTAL_STATES (STATE) VALUES ('UT');
INSERT INTO POSTAL_STATES (STATE) VALUES ('VT');
INSERT INTO POSTAL_STATES (STATE) VALUES ('VA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('WA');
INSERT INTO POSTAL_STATES (STATE) VALUES ('WV');
INSERT INTO POSTAL_STATES (STATE) VALUES ('WI');
INSERT INTO POSTAL_STATES (STATE) VALUES ('WY');
INSERT INTO POSTAL_STATES (STATE) VALUES ('ALB');
INSERT INTO POSTAL_STATES (STATE) VALUES ('BC');
INSERT INTO POSTAL_STATES (STATE) VALUES ('MAN');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NB');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NF');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NWT');
INSERT INTO POSTAL_STATES (STATE) VALUES ('NS');
INSERT INTO POSTAL_STATES (STATE) VALUES ('ONT');
INSERT INTO POSTAL_STATES (STATE) VALUES ('PEI');
INSERT INTO POSTAL_STATES (STATE) VALUES ('QUE');
INSERT INTO POSTAL_STATES (STATE) VALUES ('SASK');
INSERT INTO POSTAL_STATES (STATE) VALUES ('YUK');



INSERT INTO PROJECTS (PROJ_NO, PROJ_NAME, PROJ_DESC, TEAM_LEADER, PRODUCT, VERSION) VALUES ('HH300', 'Howard Hues', 'Porting our software to the Howard Hues
platform.  All interfaces should be 
available across the plaform.
', 102, 'RDBMS', 'HHI30A');
INSERT INTO PROJECTS (PROJ_NO, PROJ_NAME, PROJ_DESC, TEAM_LEADER, PRODUCT, VERSION) VALUES ('DE300', 'Dec Port', 'Porting our software to the new Dec 
platform.  All interfaces should be 
available across the plaform.
', 103, 'RDBMS', 'DEI30C');
INSERT INTO PROJECTS (PROJ_NO, PROJ_NAME, PROJ_DESC, TEAM_LEADER, PRODUCT, VERSION) VALUES ('FJ300', 'Fujima Port', 'Porting our software to the Fujima
platform.  All interfaces should be 
available across the plaform.
', 128, 'RDBMS', 'FJI30D');



INSERT INTO QLI$PROCEDURES (QLI$PROCEDURE_NAME, QLI$PROCEDURE) VALUES ('LOAD_TABLE', q'#for e in employees with job = 'Sales' 
begin
store sf in sales_people using
begin
sf.empno = e.empno
sf.last_name = e.last_name
sf.first_name = e.first_name
sf.mgr = e.super
print 'Sales person loaded'
end
end
#');
INSERT INTO QLI$PROCEDURES (QLI$PROCEDURE_NAME, QLI$PROCEDURE) VALUES ('STORE_EMPLOYEE', q'#declare emp long;
for first 1 max_emp
begin
emp = empno + 1
modify  using 
begin
empno = emp 
end
end
commit
print "The employee number is: ",emp 
store employees using
begin
empno = emp
last_name = *.'last name' 
first_name = *.'first name' 
super = *.'manager'  
deptno = *.'department'  
job = *.'job'
level = *.'level' 
salary = *.'salary'
end

#');
INSERT INTO QLI$PROCEDURES (QLI$PROCEDURE_NAME, QLI$PROCEDURE) VALUES ('STORE_EMP_BY_DEPT', q'#begin
declare ndept char[3]
declare y short
ndept = *.'employee department'
y = *.'how many employees to store in this department?'
repeat y store employees using
begin
declare emp long;
for first 1 max_emp
begin
emp = empno + 1
modify  using 
begin
empno = emp 
end
end
commit
print "The employee number is: ",emp 
empno = emp
last_name = *.'last name' 
first_name = *.'first name' 
mgr = *.'manager'  
dept = ndept  
job = *.'job'
level = *.'level' 
salary = *.'salary'
end
end




 
#');
INSERT INTO QLI$PROCEDURES (QLI$PROCEDURE_NAME, QLI$PROCEDURE) VALUES ('SALES_REPORT', q'#
/*Employees report*/
for e in employees with job = 'Sales' print name then
for s in sales with e.empno = s.sales_rep print s.value
#');
INSERT INTO QLI$PROCEDURES (QLI$PROCEDURE_NAME, QLI$PROCEDURE) VALUES ('OLD_SALES_REPORT', q'#for e in employees cross
s in sales with e.empno = s.sales_rep and job = 'Sales' 
print e.name, s.value
#');
INSERT INTO QLI$PROCEDURES (QLI$PROCEDURE_NAME, QLI$PROCEDURE) VALUES ('SALES_REPORT2', q'#report e in employees cross s in sales cross c in customers over
custno with e.empno = s.sales_rep and
e.job = 'Sales' sorted by e.empno
set report_name = 'Quarterly Sales Report'/'Q3 1989' 
at top of report print col 74, 'today' using dd-mmm-yyyy, skip,
report_header
at top of page print col 78, 'page',
col 82, running count (-) using z9, skip, 
column_header
at top of e.empno print e.name
print c.customer, s.order_date, s.paid, s.value
at bottom of e.empno print col 74, '===========',
skip, col 71, total s.value
at bottom of report print skip, col 74, '============',
skip, col 55, 'Quarterly Total', col 71, total s.value
end_report
#');


INSERT INTO RATING (RATING, RATING_DESCRIPTION, EXPLANATION) VALUES ('1', 'Outstanding', NULL);
INSERT INTO RATING (RATING, RATING_DESCRIPTION, EXPLANATION) VALUES ('2', 'Superior', NULL);
INSERT INTO RATING (RATING, RATING_DESCRIPTION, EXPLANATION) VALUES ('5', 'Poor', NULL);
INSERT INTO RATING (RATING, RATING_DESCRIPTION, EXPLANATION) VALUES ('6', 'Probation', NULL);
INSERT INTO RATING (RATING, RATING_DESCRIPTION, EXPLANATION) VALUES ('3', 'Good', NULL);
INSERT INTO RATING (RATING, RATING_DESCRIPTION, EXPLANATION) VALUES ('4', 'Acceptable', NULL);



INSERT INTO SALARY_HISTORY (EMPNO, CHANGE_DATE, OLD_SALARY, NEW_SALARY, UPDATER_ID) VALUES (126, '28-SEP-1989', 15000, 17250, 'STEVE');
INSERT INTO SALARY_HISTORY (EMPNO, CHANGE_DATE, OLD_SALARY, NEW_SALARY, UPDATER_ID) VALUES (132, '28-SEP-1989', 15000, 17250, 'STEVE');
INSERT INTO SALARY_HISTORY (EMPNO, CHANGE_DATE, OLD_SALARY, NEW_SALARY, UPDATER_ID) VALUES (133, '28-SEP-1989', 15000, 17250, 'STEVE');
INSERT INTO SALARY_HISTORY (EMPNO, CHANGE_DATE, OLD_SALARY, NEW_SALARY, UPDATER_ID) VALUES (149, '28-SEP-1989', 15000, 17250, 'STEVE');
INSERT INTO SALARY_HISTORY (EMPNO, CHANGE_DATE, OLD_SALARY, NEW_SALARY, UPDATER_ID) VALUES (125, '18-OCT-1989', 43000, 70000, 'STEVE');



INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89010401', 103, 100, '18-JUL-1989', 53000, '1-AUG-1989', 'shipped', '*', '21-JUL-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89010402', 100, 118, '18-JUL-1989', 5500, '1-AUG-1989', 'shipped', '*', '21-JUL-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89010403', 109, 125, '18-JUL-1989', 15500, '1-AUG-1989', 'shipped', '*', '21-JUL-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89011401', 101, 100, '28-JUL-1989', 48500, '11-AUG-1989', 'shipped', NULL, '31-JUL-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89011501', 102, 125, '29-JUL-1989', 18500, '12-AUG-1989', 'shipped', '*', '7-AUG-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89021301', 103, 100, '27-AUG-1989', 8000, '10-SEP-1989', 'shipped', '*', '3-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89021302', 104, 137, '27-AUG-1989', 38000, '10-SEP-1989', 'shipped', NULL, '3-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89022201', 105, 125, '5-SEP-1989', 25500, '19-SEP-1989', 'shipped', '*', '8-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89022301', 106, 137, '6-SEP-1989', 18000, '20-SEP-1989', 'shipped', '*', '11-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89030301', 107, 100, '14-SEP-1989', 8000, '28-SEP-1989', 'shipped', NULL, '20-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89030302', 108, 125, '14-SEP-1989', 48500, '28-SEP-1989', 'shipped', '*', '20-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89030303', 109, 125, '14-SEP-1989', 43500, '28-SEP-1989', 'shipped', '*', '18-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89030304', 110, 100, '14-SEP-1989', 4500, '28-SEP-1989', 'shipped', '*', '18-SEP-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89031601', 111, 118, '27-SEP-1989', 14500, '11-OCT-1989', 'shipped', NULL, '7-OCT-1989');
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89032601', 112, 100, '7-OCT-1989', 19500, '21-OCT-1989', 'waiting', NULL, NULL);
INSERT INTO SALES (PONUMB, CUSTNO, SALES_REP, ORDER_DATE, TOTAL_VALUE, DATE_NEEDED, ORDER_STATUS, PAID, SHIPPED) VALUES ('89032602', 113, 137, '7-OCT-1989', 85000, '21-OCT-1989', 'waiting', NULL, NULL);



INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (100, 'Basset', 'Hermione', 105);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (118, 'Griffon', 'Ronald', 105);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (125, 'Mastiff', 'Samantha', 122);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (137, 'Apso', 'Lhasa', 140);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (138, 'Pomeranian', 'Felix', 140);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (141, 'Shepherd', 'Glen', 122);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (142, 'Springer', 'Alex', 122);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (156, 'Terrier', 'Irish', NULL);
INSERT INTO SALES_PEOPLE (EMPNO, LAST_NAME, FIRST_NAME, MGR) VALUES (157, 'Terrier', 'Fox', NULL);



INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (100, 'Hermoine', 'Basset', 49000, 65500);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (118, 'Ronald', 'Griffon', 45000, 5500);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (125, 'Samantha', 'Mastiff', 70000, 151500);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (137, 'Lhasa', 'Apso', 45000, 18000);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (138, 'Felix', 'Pomeranian', 43000, NULL);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (141, 'Glen', 'Shepherd', 46000, NULL);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (142, 'Alex', 'Springer', 48000, NULL);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (156, 'Irish', 'Terrier', 48000, NULL);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (157, 'Fox', 'Terrier', 49000, NULL);
INSERT INTO SALES_PERF (EMPNO, FIRST_NAME, LAST_NAME, SALARY, TOTAL_SALES) VALUES (159, 'Castor', 'Vieber', 44000, NULL);

commit;

create unique index cust on customers (custno);
create unique index dept on departments (deptno);
create unique index empno_x1 on employees (empno);
create index emp_dept on employees (deptno);
create index emp_job on employees (job);
create unique index ep_empno on employees_projects (empno, proj_no);
create unique index job_x1 on jobs (job);
create unique index proj_no on projects (proj_no);
create unique index pyxis$index on pyxis$forms (pyxis$form_name);
alter index pyxis$index inactive;
create unique index qli$procedures_idx1 on qli$procedures (qli$procedure_name);
create unique index sh_empno on salary_history (empno);
create unique index po on sales (ponumb);
create unique index sp_empno on sales_perf (empno);
commit;

create view view_si (rowid, source, nsmallint01, nsmallint02, nsmallint03, nsmallint04, nsmallint05) as
select rowid,source,nsmallint01,nsmallint02,nsmallint03,nsmallint04,nsmallint05 from big;
------------------
create view view_fl (rowid, source, nfloat01, nfloat02, nfloat03, nfloat04, nfloat05) as
select rowid,source,nfloat01,nfloat02,nfloat03,nfloat04,nfloat05 from big;
------------------
create view view_lfl (rowid, source, nlfloat01, nlfloat02, nlfloat03, nlfloat04, nlfloat05) as
select rowid,source,nlfloat01,nlfloat02,nlfloat03,nlfloat04,nlfloat05 from big;
------------------
create view view_in (rowid, source, ninteger01, ninteger02, ninteger03, ninteger04, ninteger05) as
select rowid,source,ninteger01,ninteger02,ninteger03,ninteger04,ninteger05 from big;
------------------
create view view_dc (rowid, source, ndecimal01, ndecimal02, ndecimal03, ndecimal04, ndecimal05) as
select rowid,source,ndecimal01,ndecimal02,ndecimal03,ndecimal04,ndecimal05 from big;
------------------
create view view_ch (rowid, cchar01, cchar02, cchar03, cchar04, cchar05) as
select rowid,cchar01,cchar02,cchar03,cchar04,cchar05 from big;
------------------
create view view_vch (rowid, vchar01, vchar02, vchar03, vchar04, vchar05) as
select rowid,vchar01,vchar02,vchar03,vchar04,vchar05 from big;
------------------
create view view_dt (rowid, ddate01, ddate02, ddate03, ddate04, ddate05) as
select rowid, ddate01,ddate02,ddate03,ddate04,ddate05 from big;
------------------
create or alter view dept_budget as
select
    deptno,
    department,
    mgrno,
    reports,
    dept_level,
    head_dept
from departments d
;
------------------
create or alter view empsal as
select
    e.empno,
    e.name,
    e.level,
    j.job_title
    --yearly,
    --pay_period,
    --weekly,
    --hourly
from employees e
join jobs j on e.job = j.job
;
------------------
create or alter view fullemp as
select
    empno,
    name,
    job_title,
    department
from departments d
join employees e on d.deptno = e.deptno
join jobs j on e.job = j.job
;
------------------
create or alter view head_dept as
select
    deptno,
    department,
    mgrno,
    dept_level,
    head_dept
from dept_budget d where d.deptno in('000',100,110,120,200,300,400)
;
------------------
create or alter view management as
select
    empno,
    last_name,
    first_name,
    salary,
    job,
    deptno,
    level
from employees e where e.level <= 4
;
------------------
create or alter view sales_force as
select
    empno,
    last_name,
    first_name,
    salary,
    super
from employees e where e.job = 'Sales'
;
------------------
commit;


/* Domain constraints */
ALTER DOMAIN CUSTOMER SET NOT NULL;
ALTER DOMAIN DEPT_LEVEL ADD CHECK (VALUE IN ('1','2','3','4','5'));
ALTER DOMAIN FIRST_NAME SET NOT NULL;
ALTER DOMAIN LAST_NAME  SET NOT NULL;
ALTER DOMAIN LEVEL ADD CHECK ( VALUE IN ('1','2','3','4','5','6'));
ALTER DOMAIN ON_HOLD ADD CHECK ( VALUE = '*' or VALUE IS NULL);
ALTER DOMAIN ORDER_STATUS ADD CHECK ( VALUE IN ('shipped','booked','waiting','holding') );
ALTER DOMAIN PAID ADD CHECK ( VALUE = '*' or VALUE IS NULL);
ALTER DOMAIN REBATE ADD CHECK ( VALUE = '*' or VALUE IS NULL);
ALTER DOMAIN SEX ADD CHECK ( VALUE = 'F' or VALUE = 'M' or VALUE IS NULL);
ALTER DOMAIN VENDOR SET NOT NULL;


SET TERM ^;
CREATE OR ALTER TRIGGER STORE_CUSTOMER FOR CUSTOMERS
ACTIVE BEFORE INSERT POSITION 0
as begin
--      if not any s in postal_states
--        with s.state = new.state
--        abort 1;
end;
^
CREATE OR ALTER TRIGGER CASCADE_CHANGE FOR DEPARTMENTS
ACTIVE AFTER UPDATE POSITION 0
as begin
--    if old.deptno ne new.deptno
--            begin
--        for e in employees with e.deptno = old.deptno 
--            modify e using 
--            begin
--            e.deptno = new.deptno
--            end;
--            end_modify;
--        end_for;
--            end;
end;
^

CREATE OR ALTER TRIGGER DELETE_DEPARTMENT FOR DEPARTMENTS
ACTIVE BEFORE DELETE POSITION 0
as begin           
--    for e in employees with e.deptno = old.deptno 
--        abort 1;
--    end_for;
end;
^

CREATE OR ALTER TRIGGER MODIFY_DEPARTMENT FOR DEPARTMENTS
ACTIVE BEFORE UPDATE POSITION 0
as begin
--      if new.department missing
--         abort 1;
--      if new.mgrno not missing
--      if not any e in employees
--        with e.empno = new.mgrno
--        abort 2;
--      if new.head_dept not missing
--      if not any d in departments
--        with d.head_dept = new.head_dept
--        abort 3;
end;
^

CREATE OR ALTER TRIGGER STORE_DEPARTMENT FOR DEPARTMENTS
ACTIVE BEFORE INSERT POSITION 0
as begin
--      if new.department missing
--         abort 1;
--      if new.mgrno not missing
--      if not any e in employees
--        with e.empno = new.mgrno
--        abort 2;
--      if new.head_dept not missing
--      if not any d in departments
--        with d.head_dept = new.head_dept
--        abort 3;
end;
^

CREATE OR ALTER TRIGGER ERASE_EMPLOYEES FOR EMPLOYEES
ACTIVE AFTER DELETE POSITION 0
as begin
--     for e in employees with e.super = old.empno
--          modify e using e.super = null
--          end_modify;
--      end_for;
end;
^

CREATE OR ALTER TRIGGER ERASE_REVIEW FOR EMPLOYEES
ACTIVE AFTER DELETE POSITION 0
as begin
--for r in review with r.empno = old.empno
--    erase r;
--end_for;
end;
^

CREATE OR ALTER TRIGGER MODIFY_EMPLOYEES FOR EMPLOYEES
ACTIVE BEFORE UPDATE POSITION 0
as begin
--       if new.deptno missing or
--         not any d in departments 
--        with d.deptno = new.deptno 
--        abort 1;
--      if new.job missing or
--         not any j in jobs
--        with j.job = new.job 
--        abort 2; 
--      if new.super ne old.super 
--        and new.super not missing 
--         and not any e in employees
--        with e.empno = new.super
--        abort 3; 
--      if new.job ne old.job 
--        and new.job = 'Sales' 
--        and not any s in sales_perf
--        with new.empno = s.empno    
--        store x in sales_perf
--            x.empno = new.empno;
--            x.first_name = new.first_name;
--            x.last_name = new.last_name;
--            x.salary = new.salary;
--        end_store;   
--      for d in jobs with new.job = d.job and new.salary lt d.low_salary_range
--        abort 4;                       
--          end_for;        
--      for d in jobs with new.job = d.job and new.salary gt d.high_salary_range
--        abort 5;                       
--          end_for;        
--      for d in jobs with new.job = d.job and new.level ne d.level
--        abort 6;
--          end_for;        
--      for s in sales_perf with new.empno = s.empno and new.salary ne s.salary
--        modify s using s.salary = new.salary;                       
--              end_modify;
--      end_for;        
--      for s in sales_perf with new.job ne 'Sales' and
--        old.job = 'Sales' and old.empno = s.empno
--        modify s using s.empno = null;
--        end_modify;
--          end_for;
--      for s in sales with new.job ne 'Sales' and
--        old.job = 'Sales' and old.empno = s.sales_rep
--        modify s using s.sales_rep = null;
--        end_modify;
--          end_for;

end;
^

CREATE OR ALTER TRIGGER MOD_DEPT_COUNTS FOR EMPLOYEES
ACTIVE AFTER INSERT POSITION 0
as begin
--      for d in departments with new.deptno = d.deptno
--        modify d using 
--        d.reports = d.reports + 1;
--          end_modify;
--      end_for;
end;
^

CREATE OR ALTER TRIGGER SAL_HISTORY FOR EMPLOYEES
ACTIVE BEFORE UPDATE POSITION 0
as begin
--        if old.salary ne new.salary 
--        begin
--        store sh in salary_history 
--            sh.empno = old.empno;
--            sh.change_date = 'today';
--            sh.updater_id = rdb$user_name;
--            sh.old_salary = old.salary;
--            sh.new_salary = new.salary;
--        end_store;
--        end;
end;
^

CREATE OR ALTER TRIGGER STORE_EMPLOYEES FOR EMPLOYEES
ACTIVE BEFORE INSERT POSITION 0
as begin
--       if new.deptno missing or
--         not any d in departments 
--        with d.deptno = new.deptno 
--        abort 1;
--      if new.job missing or
--         not any j in jobs
--        with j.job = new.job 
--        abort 2; 
--      if new.super not missing 
--         and not any e in employees
--        with e.empno = new.super
--        abort 3; 
--      if new.job = 'Sales' 
--        and not any s in sales_perf
--        with new.empno = s.empno    
--        store x in sales_perf
--            x.empno = new.empno;
--            x.first_name = new.first_name;
--            x.last_name = new.last_name;
--            x.salary = new.salary;
--        end_store;   
--      for d in jobs with new.job = d.job and new.salary lt d.low_salary_range
--        abort 4;                       
--          end_for;        
--      for d in jobs with new.job = d.job and new.salary gt d.high_salary_range
--        abort 5;                       
--          end_for;        
--      for d in jobs with new.job = d.job and new.level ne d.level
--        abort 6;
--          end_for;        
--      for s in sales_perf with new.empno = s.empno and new.salary ne s.salary
--        modify s using s.salary = new.salary;                       
--              end_modify;
--      end_for;        
end;
^

CREATE OR ALTER TRIGGER SUB_DEPT_COUNTS FOR EMPLOYEES
ACTIVE AFTER DELETE POSITION 0
as begin
--      for d in departments with old.deptno = d.deptno
--        modify d using 
--        d.reports = d.reports - 1;
--          end_modify;
--      end_for;
end;
^

CREATE OR ALTER TRIGGER CASCADE_JOB FOR JOBS
ACTIVE AFTER UPDATE POSITION 0
as begin
--    if old.job ne new.job
--            begin
--        for e in employees with e.job = old.job
--            modify e using 
--            begin
--            e.job = new.job
--            end;
--            end_modify;
--        end_for;
--            end;
end;
^

CREATE OR ALTER TRIGGER CHECK_REVIEW FOR REVIEW
ACTIVE BEFORE INSERT POSITION 0
as begin
--  if not any e in employees with new.reviewer = e.super
--        abort 11;
--  if not any e in employees with new.empno = e.empno
--        abort 12;
--  if not any r in rating with new.rating = r.rating
--        abort 13;
end;
^

CREATE OR ALTER TRIGGER ERASE_SAL_HIS FOR SALARY_HISTORY
ACTIVE BEFORE DELETE POSITION 0
as begin
--      if rdb$user_name ne 'STEVE'
--         abort 1;
end;
^

/* Trigger: NOMOD_SAL_HIS */
CREATE OR ALTER TRIGGER NOMOD_SAL_HIS FOR SALARY_HISTORY
ACTIVE BEFORE UPDATE POSITION 0
as begin
--      if rdb$user_name ne 'STEVE'
--         abort 1;
end;
^

CREATE OR ALTER TRIGGER ADD_CUSTOMER FOR SALES
ACTIVE BEFORE INSERT POSITION 1
as begin
--    if not any c in customers with c.custno = new.custno
--    store c in customers using 
--    begin
--        c.custno = new.custno;
--        c.customer = 'Added by trigger';
--    end;
--    end_store;
end;
^

CREATE OR ALTER TRIGGER CHECK_SALES FOR SALES
ACTIVE BEFORE INSERT POSITION 1
as begin
--      if not any e in employees 
--        with e.empno = new.sales_rep 
--        abort 1;
end;
^

CREATE OR ALTER TRIGGER DEADBEAT FOR SALES
ACTIVE BEFORE INSERT POSITION 0
as begin
--      if any c in customers 
--        with c.custno = new.custno
--            and c.on_hold = '*'
--        abort 1;
end;
^

CREATE OR ALTER TRIGGER PUT_ON_HOLD FOR SALES
ACTIVE AFTER UPDATE POSITION 0
as begin
--      for c in customers with new.custno = c.custno and 
--        new.aged > 30 and new.paid ne '*'
--        modify c using 
--            c.on_hold = '*'
--        end_modify;
--      end_for;
end;
^

CREATE OR ALTER TRIGGER RAISE_SALARY FOR SALES_PERF
ACTIVE AFTER UPDATE POSITION 1
as begin
--    if new.total_sales gt old.total_sales and 
--    old.total_sales/(old.salary*4.5) lt 1.25 and
--    new.total_sales/(old.salary*4.5) ge 1.25 then
--    begin
--        for e in employees with e.empno = new.empno
--            modify e using e.salary = e.salary * 1.05
--            end_modify;
--        end_for;
--    end;
end;
^
SET TERM ;^
commit;

GRANT SELECT, INSERT, UPDATE, DELETE, REFERENCES ON BIG TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON CUSTOMERS TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON DEPARTMENTS TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON EMPLOYEES TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON EMPLOYEES_PROJECTS TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON JOBS TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON MAX_EMP TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON POSTAL_STATES TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON PROJECTS TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON PYXIS$FORMS TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON QLI$PROCEDURES TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON RATING TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON RATING TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON REVIEW TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON SALARY_HISTORY TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON SALES TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON SALES_PEOPLE TO PUBLIC;
GRANT DELETE, INSERT, SELECT, UPDATE, REFERENCES ON SALES_PERF TO PUBLIC;

GRANT USAGE ON SEQUENCE CUSTOMERS TO PUBLIC;
GRANT USAGE ON SEQUENCE DEPARTMENTS TO PUBLIC;
GRANT USAGE ON SEQUENCE EMPLOYEES TO PUBLIC;
GRANT USAGE ON SEQUENCE EMPLOYEES_PROJECTS TO PUBLIC;
GRANT USAGE ON SEQUENCE JOBS TO PUBLIC;
GRANT USAGE ON SEQUENCE MAX_EMP TO PUBLIC;
GRANT USAGE ON SEQUENCE POSTAL_STATES TO PUBLIC;
GRANT USAGE ON SEQUENCE PROJECTS TO PUBLIC;
GRANT USAGE ON SEQUENCE PYXIS$FORMS TO PUBLIC;
GRANT USAGE ON SEQUENCE QLI$PROCEDURES TO PUBLIC;
GRANT USAGE ON SEQUENCE RATING TO PUBLIC;
GRANT USAGE ON SEQUENCE REVIEW TO PUBLIC;
GRANT USAGE ON SEQUENCE SALARY_HISTORY TO PUBLIC;
GRANT USAGE ON SEQUENCE SALES TO PUBLIC;
GRANT USAGE ON SEQUENCE SALES_PEOPLE TO PUBLIC;
GRANT USAGE ON SEQUENCE SALES_PERF TO PUBLIC;
commit;
